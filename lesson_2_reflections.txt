> What happens when you initialize a repository? Why do you need to do it?

When you initialize a git repository, git creates the infrastructure for managing files in git - the .git directory with all of the metadata files in it (for tracking head, tags, branches, remotes, etc.).  You need to do it so git can do the one-time setup required to be able to do version control on sets of files when you commit, etc.

> How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area keeps track of which files will be included in the next commit.  The respoistory contains all the file objects, tree objects, and commit objects, as well as references (heads, branches) for bookkeeping. The working directory is where the files are on your disk that are currently checked out for the repository.  The staging area is useful for two reasons: 1) we want a commit to be a logical unit, so we need some way to collect all and only the files we want to commit at one time, even if we change other files - so we don't want to commit our working directory directly to the repository, and 2) instead of requiring someone to enter all the filenames to be committed at the time of commit, the staging area allows them to incrementally add the files to be committed, and remove those that are not to be committed to help make managing that easier.
